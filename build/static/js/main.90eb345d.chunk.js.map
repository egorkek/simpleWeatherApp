{"version":3,"sources":["HOC/Layout/Layout.css","App.css","components/form/Form.css","components/Weather/Weather.css","HOC/Layout/Layout.js","store/actions/checkWeather.js","components/form/Form.js","components/Weather/Weather.js","App.js","store/actions/findCurrentCity.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","Layout","Night","Day","App","Form","Weather","props","react_default","a","createElement","className","concat","isDay","classes","children","forReducer","newData","type","payload","onKeek","e","key","preventDefault","city","target","elements","value","_this","checkWeather","_this2","this","onSubmit","API_KEY","name","placeholder","React","Component","connect","state","dispatch","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","fetch","then","_ref2","_callee","res","_context","json","abrupt","sent","stop","_x2","apply","arguments","obj","country","location","humidity","current","temperature","temp_c","condition","text","image","icon","is_day","err","undefined","catch","alert","_x","src","alt","findCurrentCity","HOC_Layout_Layout","components_form_Form","components_Weather_Weather","getStore","navigator","geolocation","getCurrentPosition","suc","latitude","coords","toFixed","longitude","axios","get","data","region","console","log","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","length","action","objectSpread","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90eb345d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--_ISxv\",\"Night\":\"Layout__Night--1AlxT\",\"Day\":\"Layout__Day--tjA7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App--1o-Fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form__Form--1sXHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Weather\":\"Weather__Weather--1Z6Vl\"};","import React from 'react'\nimport classes from './Layout.css'\n\nconst Layout = (props)=>{\n    \n    \n    \n    return(\n        <div className={`${props.isDay ? classes.Day : classes.Night} ${classes.Layout}`}>\n            <main>\n                {props.children}\n            </main>\n        </div>\n\n    )\n\n}\nexport default Layout","\n// export default async function checkWeather(city, key){\n//     console.log(ciy);\n    \n//     let newData = {}\n//     await fetch(`https://api.apixu.com/v1/current.json?key=${key}&q=${city}`)\n//         .then(async response => await response.json())\n//         .then(obj=>{\n//             newData = {\n//                 country: obj.location.country,\n//                 city: obj.location.name,\n//                 humidity: obj.current.humidity,\n//                 temperature: obj.current.temp_c,\n//                 condition: obj.current.condition.text,\n//                 image: obj.current.condition.icon\n//             }\n\n//         })\n//         console.log(newData);\n//         console.log(forReducer)\n        \n//         return async (dispatch)=>{\n\n//           dispatch(forReducer(newData))\n\n//         }\n        \n    \n// }\n\n// function forReducer(newData){\n//     return{\n//         type:'ADD_WEATHER',\n//         payload: newData\n//     }\n// }\n\n\n\nexport default function checkWeather(city, key){\n    return async dispatch =>{\n        let newData = {}\n        await fetch(`https://api.apixu.com/v1/current.json?key=${key}&q=${city}`)\n            .then(async res=> await res.json())\n            .then(obj=>{\n                \n                \n                newData={\n                country: obj.location.country,\n                city: obj.location.name,\n                humidity: obj.current.humidity,\n                temperature: obj.current.temp_c,\n                condition: obj.current.condition.text,\n                image: obj.current.condition.icon,\n                isDay: obj.current.is_day,\n\n                err: undefined\n            }\n\n            }\n            ).catch(err=>{\n                newData={\n                    \n                    err:'smth wrong'\n                }\n                alert(newData.err)\n            });\n\n        \n        dispatch(forReducer(newData))\n    }\n    \n        \n    \n}\n\nfunction forReducer(newData){\n    return{\n        type:'ADD_WEATHER',\n        payload: newData\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport checkWeather from '../../store/actions/checkWeather'\nimport classes from './Form.css'\nclass Form extends React.Component{\n\n\n     onKeek= (e, key)=>{\n        e.preventDefault();\n        const city = e.target.elements.city.value\n         this.props.checkWeather(city, key)\n         \n\n\n        \n\n    }\n\n    render(){\n\n\n        return(\n            <form className={classes.Form} onSubmit= {e=>this.onKeek(e, this.props.API_KEY)}>\n                <input name='city' placeholder='enter your city.....'/>\n                <button>Check weather!</button>\n            </form>\n        )\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        checkWeather: (e, API_KEY)=>dispatch(checkWeather(e, API_KEY))\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        state:state\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)(Form);","import React from 'react'\nimport classes from './Weather.css'\n\n\nconst Weather = (props)=>{\n    \n\n    return(\n        <div className={classes.Weather}>\n            <div>\n                <p><span>City: </span>{props.city} ({props.country})</p>\n                <p><span>Temperature: </span>{props.temperature}&deg;</p>\n                <p><span>Condition: </span>{props.condition} </p>\n                <p><span>Humidity: </span>{props.humidity}%</p>\n            </div>\n            <img src={`https:${props.image}`} alt={props.condition}/>\n        </div>\n    )\n}\nexport default Weather","import React, { Component } from 'react';\nimport classes from './App.css'\nimport Layout from './HOC/Layout/Layout'\nimport { connect } from 'react-redux'\nimport Form from './components/form/Form'\nimport Weather from './components/Weather/Weather'\nimport findCurrentCity from './store/actions/findCurrentCity'\nconst API_KEY = '7f9b040ad7eb40c7bab203110192302'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.findCurrentCity()\n    \n    \n  }\n  render() {\n    \n    \n\n\n\n    return (\n      <Layout isDay={this.props.state.isDay}>\n        <div className={[classes.App]}>\n          <h1>Check your weather!</h1>\n          <Form API_KEY={API_KEY} />\n          {!!this.props.state.city ?\n            <Weather\n              city={this.props.state.city}\n              country={this.props.state.country}\n              humidity={this.props.state.humidity}\n              temperature={this.props.state.temperature}\n              condition={this.props.state.condition}\n              image={this.props.state.image}\n            />\n\n            : null}\n\n        </div>\n      </Layout>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    state: state\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    findCurrentCity: () => dispatch(findCurrentCity())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import axios from 'axios'\nexport default function findCurrentCity(){\n    return (dispatch, getStore)=>{\n        \n        navigator.geolocation.getCurrentPosition(\n        (suc)=>{\n            const latitude = suc.coords.latitude.toFixed(3);\n            const longitude = suc.coords.longitude.toFixed(3);\n            axios.get(`http://api.apixu.com/v1/current.json?key=7f9b040ad7eb40c7bab203110192302&q=${latitude} ${longitude}`)\n            .then(res=>{\n                \n                \n                const newData={\n                        country: res.data.location.country,\n                        city: res.data.location.region,\n                        humidity: res.data.current.humidity,\n                        temperature: res.data.current.temp_c,\n                        condition: res.data.current.condition.text,\n                        image: res.data.current.condition.icon,\n                        isDay: res.data.current.is_day,\n                        err: undefined\n                }\n                dispatch(forReducer(newData))\n\n                \n                \n            })\n\n            \n          \n        },\n        err=>{\n          console.log(err);\n          \n        }\n      );\n      \n      \n      \n    }\n\n      \n}\n\nfunction forReducer(data){\n    return{\n        type: 'FIND_CURRENT_CITY',\n        payload: data\n\n    }\n}","const initialState={\n\n}\n\nexport default function rootReducer(state = initialState, action){\n    switch(action.type){\n        case 'ADD_WEATHER':\n        return {\n                ...state,\n                ...action.payload\n        }\n        case 'FIND_CURRENT_CITY':\n        return{\n            ...state,\n            ...action.payload\n        }\n\n        \n\n\n        default:\n        return state;\n    }\n\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './store/reducers/rootReducer'\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\n\nconst store = createStore(\n    rootReducer,composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\n\n\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\n\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}